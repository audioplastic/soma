classdef omeProc < sigProc
    %OMEPROC Summary of this class goes here
    %   Detailed explanation goes here

    properties
        %OUT/MID EAR PROPERTIES
        ome_fLoCut  = 450;  %lf cutoff (default = 450 Hz)
        ome_fHiCut  = 8000; %hf cutoff (default = 8000 Hz)
        ome_fOrd    = 2;    %filter order (default = 2nd)
    end

    %************************************************************
    % Dependents - never set by user, only calculated when needed
    %************************************************************
    properties (Dependent = true)
        ome %Signal post ome processing
    end

    methods
        %% **********************************************************
        % Constructor - can pass audio signal on instantiation
        %************************************************************
        function obj = omeProc(varargin)
            if nargin > 0
                obj.sig = ip;
            end
            if nargin > 1
                obj.sr = sr;
            end
        end
        
        %% **********************************************************
        % Outer/mid ear processing -> get method
        %************************************************************
        function value = get.ome(obj)
            [midEar_b,midEar_a] = butter(obj.ome_fOrd,...
                [obj.ome_fLoCut obj.ome_fHiCut]*2*(1/obj.sr)); %Middle ear transfer coefficients
            value = filter(midEar_b,midEar_a,obj.sig);
        end

        %% **********************************************************
        % Set methods - dull error catching code
        %************************************************************
        function obj = set.ome_fHiCut(obj,value)
            assert (value < obj.sr/2 , 'fMax must be below Nyquist limit ( < sr/2 )')
            obj.ome_fHiCut = value;
        end
    end
end
